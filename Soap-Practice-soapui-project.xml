<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project id="29cb776a-dc53-4337-83f6-67b369b68df2" activeEnvironment="Default" name="Soap-Practice" resourceRoot="" soapui-version="5.6.0" abortOnError="false" runType="SEQUENTIAL" xmlns:con="http://eviware.com/soapui/config"><con:settings/><con:interface xsi:type="con:WsdlInterface" id="39ed6362-8db1-4ab6-a949-588e838087c5" wsaVersion="NONE" name="SOAPDemoSoap" type="wsdl" bindingName="{http://tempuri.org}SOAPDemoSoap" soapVersion="1_1" anonymous="optional" definition="https://www.crcind.com/csp/samples/SOAP.Demo.CLS?WSDL=1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="https://www.crcind.com/csp/samples/SOAP.Demo.CLS?WSDL=1"><con:part><con:url>https://www.crcind.com/csp/samples/SOAP.Demo.CLS?WSDL=1</con:url><con:content><![CDATA[<definitions targetNamespace="http://tempuri.org" xmlns="http://schemas.xmlsoap.org/wsdl/" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:s="http://www.w3.org/2001/XMLSchema" xmlns:s0="http://tempuri.org" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <types>
    <s:schema elementFormDefault="qualified" targetNamespace="http://tempuri.org">
      <s:import namespace="http://tempuri.org/ByNameDataSet" schemaLocation="https://www.crcind.com:443/csp/samples/SOAP.ByNameDataSet.cls?XSD"/>
      <s:import namespace="http://tempuri.org/QueryByName_DataSet" schemaLocation="https://www.crcind.com:443/csp/samples/SOAP.Demo.QueryByName.DS.cls?XSD"/>
      <s:element name="AddInteger">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" name="Arg1" type="s:long"/>
            <s:element minOccurs="0" name="Arg2" type="s:long"/>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="AddIntegerResponse">
        <s:complexType>
          <s:sequence>
            <s:element name="AddIntegerResult" type="s:long"/>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="DivideInteger">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" name="Arg1" type="s:long"/>
            <s:element minOccurs="0" name="Arg2" type="s:long"/>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="DivideIntegerResponse">
        <s:complexType>
          <s:sequence>
            <s:element name="DivideIntegerResult" type="s:long"/>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="FindPerson">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" name="id" type="s:string"/>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="FindPersonResponse">
        <s:complexType>
          <s:sequence>
            <s:element name="FindPersonResult" type="s0:Person"/>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:complexType name="Employee">
        <s:complexContent>
          <s:extension base="s0:Person">
            <s:sequence>
              <s:element minOccurs="0" name="Title">
                <s:simpleType>
                  <s:restriction base="s:string">
                    <s:maxLength value="50"/>
                  </s:restriction>
                </s:simpleType>
              </s:element>
              <s:element minOccurs="0" name="Salary">
                <s:simpleType>
                  <s:restriction base="s:long">
                    <s:maxInclusive value="100000"/>
                    <s:minInclusive value="0"/>
                  </s:restriction>
                </s:simpleType>
              </s:element>
              <s:element minOccurs="0" name="Notes" type="s:string"/>
              <s:element minOccurs="0" name="Picture" type="s:base64Binary"/>
            </s:sequence>
          </s:extension>
        </s:complexContent>
      </s:complexType>
      <s:complexType name="Person">
        <s:sequence>
          <s:element name="Name" type="s:string"/>
          <s:element name="SSN" type="s:string"/>
          <s:element minOccurs="0" name="DOB" type="s:date"/>
          <s:element minOccurs="0" name="Home" type="s0:Address"/>
          <s:element minOccurs="0" name="Office" type="s0:Address"/>
          <s:element minOccurs="0" name="Spouse" type="s0:Person"/>
          <s:element minOccurs="0" name="FavoriteColors" type="s0:ArrayOfFavoriteColorsItemString"/>
          <s:element minOccurs="0" name="Age" type="s:long"/>
        </s:sequence>
      </s:complexType>
      <s:complexType name="Address">
        <s:sequence>
          <s:element minOccurs="0" name="Street">
            <s:simpleType>
              <s:restriction base="s:string">
                <s:maxLength value="80"/>
              </s:restriction>
            </s:simpleType>
          </s:element>
          <s:element minOccurs="0" name="City">
            <s:simpleType>
              <s:restriction base="s:string">
                <s:maxLength value="80"/>
              </s:restriction>
            </s:simpleType>
          </s:element>
          <s:element minOccurs="0" name="State">
            <s:simpleType>
              <s:restriction base="s:string">
                <s:maxLength value="2"/>
              </s:restriction>
            </s:simpleType>
          </s:element>
          <s:element minOccurs="0" name="Zip">
            <s:simpleType>
              <s:restriction base="s:string">
                <s:maxLength value="5"/>
              </s:restriction>
            </s:simpleType>
          </s:element>
        </s:sequence>
      </s:complexType>
      <s:complexType name="ArrayOfFavoriteColorsItemString">
        <s:sequence>
          <s:element maxOccurs="unbounded" minOccurs="0" name="FavoriteColorsItem" nillable="true" type="s:string"/>
        </s:sequence>
      </s:complexType>
      <s:element name="GetByName">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" name="name" type="s:string"/>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetByNameResponse">
        <s:complexType>
          <s:sequence>
            <s:element name="GetByNameResult" type="s0:DataSet"/>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:complexType name="DataSet">
        <s:sequence>
          <s:element ref="s:schema"/>
          <s:any/>
        </s:sequence>
      </s:complexType>
      <s:element name="GetDataSetByName">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" name="name" type="s:string"/>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetDataSetByNameResponse">
        <s:complexType>
          <s:sequence>
            <s:element name="GetDataSetByNameResult" type="s0:ByNameDataSet"/>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:complexType name="ByNameDataSet">
        <s:sequence>
          <s:any namespace="http://tempuri.org/ByNameDataSet"/>
        </s:sequence>
      </s:complexType>
      <s:element name="GetListByName">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" name="name" type="s:string"/>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetListByNameResponse">
        <s:complexType>
          <s:sequence>
            <s:element name="GetListByNameResult" type="s0:ArrayOfPersonIdentificationPersonIdentification"/>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:complexType name="ArrayOfPersonIdentificationPersonIdentification">
        <s:sequence>
          <s:element maxOccurs="unbounded" minOccurs="0" name="PersonIdentification" nillable="true" type="s0:PersonIdentification"/>
        </s:sequence>
      </s:complexType>
      <s:complexType name="PersonIdentification">
        <s:sequence>
          <s:element minOccurs="0" name="ID" type="s:string"/>
          <s:element name="Name" type="s:string"/>
          <s:element name="SSN" type="s:string"/>
          <s:element minOccurs="0" name="DOB" type="s:date"/>
        </s:sequence>
      </s:complexType>
      <s:element name="LookupCity">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" name="zip" type="s:string"/>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="LookupCityResponse">
        <s:complexType>
          <s:sequence>
            <s:element name="LookupCityResult" type="s0:Address"/>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="Mission">
        <s:complexType>
          <s:sequence/>
        </s:complexType>
      </s:element>
      <s:element name="MissionResponse">
        <s:complexType>
          <s:sequence>
            <s:element name="MissionResult" type="s:string"/>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="QueryByName">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" name="name" type="s:string"/>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="QueryByNameResponse">
        <s:complexType>
          <s:sequence>
            <s:element name="QueryByNameResult" type="s0:QueryByName_DataSet"/>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:complexType name="QueryByName_DataSet">
        <s:sequence>
          <s:any namespace="http://tempuri.org/QueryByName_DataSet"/>
        </s:sequence>
      </s:complexType>
    </s:schema>
  </types>
  <message name="AddIntegerSoapIn">
    <part name="parameters" element="s0:AddInteger"/>
  </message>
  <message name="AddIntegerSoapOut">
    <part name="parameters" element="s0:AddIntegerResponse"/>
  </message>
  <message name="DivideIntegerSoapIn">
    <part name="parameters" element="s0:DivideInteger"/>
  </message>
  <message name="DivideIntegerSoapOut">
    <part name="parameters" element="s0:DivideIntegerResponse"/>
  </message>
  <message name="FindPersonSoapIn">
    <part name="parameters" element="s0:FindPerson"/>
  </message>
  <message name="FindPersonSoapOut">
    <part name="parameters" element="s0:FindPersonResponse"/>
  </message>
  <message name="GetByNameSoapIn">
    <part name="parameters" element="s0:GetByName"/>
  </message>
  <message name="GetByNameSoapOut">
    <part name="parameters" element="s0:GetByNameResponse"/>
  </message>
  <message name="GetDataSetByNameSoapIn">
    <part name="parameters" element="s0:GetDataSetByName"/>
  </message>
  <message name="GetDataSetByNameSoapOut">
    <part name="parameters" element="s0:GetDataSetByNameResponse"/>
  </message>
  <message name="GetListByNameSoapIn">
    <part name="parameters" element="s0:GetListByName"/>
  </message>
  <message name="GetListByNameSoapOut">
    <part name="parameters" element="s0:GetListByNameResponse"/>
  </message>
  <message name="LookupCitySoapIn">
    <part name="parameters" element="s0:LookupCity"/>
  </message>
  <message name="LookupCitySoapOut">
    <part name="parameters" element="s0:LookupCityResponse"/>
  </message>
  <message name="MissionSoapIn">
    <part name="parameters" element="s0:Mission"/>
  </message>
  <message name="MissionSoapOut">
    <part name="parameters" element="s0:MissionResponse"/>
  </message>
  <message name="QueryByNameSoapIn">
    <part name="parameters" element="s0:QueryByName"/>
  </message>
  <message name="QueryByNameSoapOut">
    <part name="parameters" element="s0:QueryByNameResponse"/>
  </message>
  <portType name="SOAPDemoSoap">
    <operation name="AddInteger">
      <input message="s0:AddIntegerSoapIn"/>
      <output message="s0:AddIntegerSoapOut"/>
    </operation>
    <operation name="DivideInteger">
      <input message="s0:DivideIntegerSoapIn"/>
      <output message="s0:DivideIntegerSoapOut"/>
    </operation>
    <operation name="FindPerson">
      <input message="s0:FindPersonSoapIn"/>
      <output message="s0:FindPersonSoapOut"/>
    </operation>
    <operation name="GetByName">
      <input message="s0:GetByNameSoapIn"/>
      <output message="s0:GetByNameSoapOut"/>
    </operation>
    <operation name="GetDataSetByName">
      <input message="s0:GetDataSetByNameSoapIn"/>
      <output message="s0:GetDataSetByNameSoapOut"/>
    </operation>
    <operation name="GetListByName">
      <input message="s0:GetListByNameSoapIn"/>
      <output message="s0:GetListByNameSoapOut"/>
    </operation>
    <operation name="LookupCity">
      <input message="s0:LookupCitySoapIn"/>
      <output message="s0:LookupCitySoapOut"/>
    </operation>
    <operation name="Mission">
      <input message="s0:MissionSoapIn"/>
      <output message="s0:MissionSoapOut"/>
    </operation>
    <operation name="QueryByName">
      <input message="s0:QueryByNameSoapIn"/>
      <output message="s0:QueryByNameSoapOut"/>
    </operation>
  </portType>
  <binding name="SOAPDemoSoap" type="s0:SOAPDemoSoap">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <operation name="AddInteger">
      <soap:operation soapAction="http://tempuri.org/SOAP.Demo.AddInteger" style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="DivideInteger">
      <soap:operation soapAction="http://tempuri.org/SOAP.Demo.DivideInteger" style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="FindPerson">
      <soap:operation soapAction="http://tempuri.org/SOAP.Demo.FindPerson" style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="GetByName">
      <soap:operation soapAction="http://tempuri.org/SOAP.Demo.GetByName" style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="GetDataSetByName">
      <soap:operation soapAction="http://tempuri.org/SOAP.Demo.GetDataSetByName" style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="GetListByName">
      <soap:operation soapAction="http://tempuri.org/SOAP.Demo.GetListByName" style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="LookupCity">
      <soap:operation soapAction="http://tempuri.org/SOAP.Demo.LookupCity" style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="Mission">
      <soap:operation soapAction="http://tempuri.org/SOAP.Demo.Mission" style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="QueryByName">
      <soap:operation soapAction="http://tempuri.org/SOAP.Demo.QueryByName" style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
  </binding>
  <service name="SOAPDemo">
    <port name="SOAPDemoSoap" binding="s0:SOAPDemoSoap">
      <soap:address location="https://www.crcind.com:443/csp/samples/SOAP.Demo.cls"/>
    </port>
  </service>
</definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part><con:part><con:url>https://www.crcind.com:443/csp/samples/SOAP.ByNameDataSet.cls?XSD</con:url><con:content><![CDATA[<s:schema id="ByNameDataSet" targetNamespace="http://tempuri.org/ByNameDataSet" attributeFormDefault="qualified" elementFormDefault="qualified" xmlns="http://tempuri.org/ByNameDataSet" xmlns:mstns="http://tempuri.org/ByNameDataSet" xmlns:s="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
  <s:element name="ByNameDataSet" msdata:IsDataSet="true">
    <s:complexType>
      <s:choice maxOccurs="unbounded">
        <s:element name="ByName">
          <s:complexType>
            <s:sequence>
              <s:element name="ID" type="s:long" minOccurs="0"/>
              <s:element name="Name" type="s:string" minOccurs="0"/>
              <s:element name="DOB" type="s:date" minOccurs="0"/>
              <s:element name="SSN" type="s:string" minOccurs="0"/>
            </s:sequence>
          </s:complexType>
        </s:element>
      </s:choice>
    </s:complexType>
    <s:unique name="Constraint1" msdata:PrimaryKey="true">
      <s:selector xpath=".//mstns:ByName"/>
      <s:field xpath="mstns:ID"/>
    </s:unique>
  </s:element>
</s:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>https://www.crcind.com:443/csp/samples/SOAP.Demo.QueryByName.DS.cls?XSD</con:url><con:content><![CDATA[<s:schema id="QueryByName_DataSet" targetNamespace="http://tempuri.org/QueryByName_DataSet" attributeFormDefault="qualified" elementFormDefault="qualified" xmlns="http://tempuri.org/QueryByName_DataSet" xmlns:mstns="http://tempuri.org/QueryByName_DataSet" xmlns:s="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
  <s:element name="QueryByName_DataSet" msdata:IsDataSet="true">
    <s:complexType>
      <s:choice maxOccurs="unbounded">
        <s:element name="QueryByName">
          <s:complexType>
            <s:sequence>
              <s:element name="ID" type="s:long" minOccurs="0"/>
              <s:element name="Name" type="s:string" minOccurs="0"/>
              <s:element name="DOB" type="s:date" minOccurs="0"/>
              <s:element name="SSN" type="s:string" minOccurs="0"/>
            </s:sequence>
          </s:complexType>
        </s:element>
      </s:choice>
    </s:complexType>
    <s:unique name="Constraint1" msdata:PrimaryKey="true">
      <s:selector xpath=".//mstns:QueryByName"/>
      <s:field xpath="mstns:ID"/>
    </s:unique>
  </s:element>
</s:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://www.crcind.com:443/csp/samples/SOAP.Demo.cls</con:endpoint></con:endpoints><con:operation id="a4ea9909-c058-4e1b-b6d8-6edeb8b688b9" isOneWay="false" action="http://tempuri.org/SOAP.Demo.AddInteger" name="AddInteger" bindingOperationName="AddInteger" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="9674c0cb-3f49-4116-abbd-1cdc79e994cf" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://www.crcind.com:443/csp/samples/SOAP.Demo.cls</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tem="http://tempuri.org">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <tem:AddInteger>\r
         <!--Optional:-->\r
         <tem:Arg1>?</tem:Arg1>\r
         <!--Optional:-->\r
         <tem:Arg2>?</tem:Arg2>\r
      </tem:AddInteger>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://tempuri.org/SOAP.Demo.AddInteger"/></con:call></con:operation><con:operation id="7c723cf3-69fd-4fb8-8168-77f3c6410aa7" isOneWay="false" action="http://tempuri.org/SOAP.Demo.DivideInteger" name="DivideInteger" bindingOperationName="DivideInteger" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="dbfdaecb-237a-4a0b-b11f-559039c2c1a8" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://www.crcind.com:443/csp/samples/SOAP.Demo.cls</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tem="http://tempuri.org">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <tem:DivideInteger>\r
         <!--Optional:-->\r
         <tem:Arg1>?</tem:Arg1>\r
         <!--Optional:-->\r
         <tem:Arg2>?</tem:Arg2>\r
      </tem:DivideInteger>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://tempuri.org/SOAP.Demo.DivideInteger"/></con:call></con:operation><con:operation id="e4903be9-051d-4913-9c28-b6be44431e22" isOneWay="false" action="http://tempuri.org/SOAP.Demo.FindPerson" name="FindPerson" bindingOperationName="FindPerson" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="311b8fb2-5598-4353-a4b4-4339d1dd821a" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://www.crcind.com:443/csp/samples/SOAP.Demo.cls</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tem="http://tempuri.org">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <tem:FindPerson>\r
         <!--Optional:-->\r
         <tem:id>?</tem:id>\r
      </tem:FindPerson>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://tempuri.org/SOAP.Demo.FindPerson"/></con:call></con:operation><con:operation id="81b577a2-9b1a-488b-9d45-55ede40b9276" isOneWay="false" action="http://tempuri.org/SOAP.Demo.GetByName" name="GetByName" bindingOperationName="GetByName" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="8573e779-f12e-40aa-bf81-8f8bb86c70e5" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://www.crcind.com:443/csp/samples/SOAP.Demo.cls</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tem="http://tempuri.org">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <tem:GetByName>\r
         <!--Optional:-->\r
         <tem:name>?</tem:name>\r
      </tem:GetByName>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://tempuri.org/SOAP.Demo.GetByName"/></con:call></con:operation><con:operation id="9f590846-6bef-4c18-a76f-5aab92793468" isOneWay="false" action="http://tempuri.org/SOAP.Demo.GetDataSetByName" name="GetDataSetByName" bindingOperationName="GetDataSetByName" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="1ac5fd99-a402-408b-a6fd-2f8d4f473b3b" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://www.crcind.com:443/csp/samples/SOAP.Demo.cls</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tem="http://tempuri.org">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <tem:GetDataSetByName>\r
         <!--Optional:-->\r
         <tem:name>?</tem:name>\r
      </tem:GetDataSetByName>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://tempuri.org/SOAP.Demo.GetDataSetByName"/></con:call></con:operation><con:operation id="e4b2c290-bce0-4503-9b6a-4ae36bbfcabd" isOneWay="false" action="http://tempuri.org/SOAP.Demo.GetListByName" name="GetListByName" bindingOperationName="GetListByName" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="29c3b7c1-f34a-4f98-b826-862085526605" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://www.crcind.com:443/csp/samples/SOAP.Demo.cls</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tem="http://tempuri.org">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <tem:GetListByName>\r
         <!--Optional:-->\r
         <tem:name>?</tem:name>\r
      </tem:GetListByName>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://tempuri.org/SOAP.Demo.GetListByName"/></con:call></con:operation><con:operation id="36b9caa3-d8e9-436f-ba3e-d5506b494862" isOneWay="false" action="http://tempuri.org/SOAP.Demo.LookupCity" name="LookupCity" bindingOperationName="LookupCity" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="decaeb68-f4bb-443a-9a3d-a568f7f9145e" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://www.crcind.com:443/csp/samples/SOAP.Demo.cls</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tem="http://tempuri.org">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <tem:LookupCity>\r
         <!--Optional:-->\r
         <tem:zip>?</tem:zip>\r
      </tem:LookupCity>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://tempuri.org/SOAP.Demo.LookupCity"/></con:call></con:operation><con:operation id="281cc90b-3bbc-41df-b66b-eb2faca02f82" isOneWay="false" action="http://tempuri.org/SOAP.Demo.Mission" name="Mission" bindingOperationName="Mission" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="5653eb67-ea3c-4496-a83b-8c305119a496" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://www.crcind.com:443/csp/samples/SOAP.Demo.cls</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tem="http://tempuri.org">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <tem:Mission/>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://tempuri.org/SOAP.Demo.Mission"/></con:call></con:operation><con:operation id="6fb03b7e-05ff-47f0-afa3-bde7c8679f6c" isOneWay="false" action="http://tempuri.org/SOAP.Demo.QueryByName" name="QueryByName" bindingOperationName="QueryByName" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="d46f385d-6380-488c-ace1-6dd68372450d" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://www.crcind.com:443/csp/samples/SOAP.Demo.cls</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tem="http://tempuri.org">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <tem:QueryByName>\r
         <!--Optional:-->\r
         <tem:name>?</tem:name>\r
      </tem:QueryByName>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://tempuri.org/SOAP.Demo.QueryByName"/></con:call></con:operation></con:interface><con:interface xsi:type="con:RestService" id="67823faa-558e-4f44-92cc-b5497bc24db0" wadlVersion="http://wadl.dev.java.net/2009/02" name="https://reqres.in" type="rest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints/><con:resource name="Users" path="/api/users" id="ab8598c2-3076-447b-aa5c-a4f20f245b16"><con:settings/><con:parameters><con:parameter><con:name>page</con:name><con:value>2</con:value><con:style>QUERY</con:style><con:default>2</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="Users 1" id="3f647897-e75b-490d-8a59-bc0aae68a1e4" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:user="https://reqres.in/api/users">user:Response</con:element></con:representation><con:request name="Request 1" id="275d3f6c-6370-4199-b66d-1cf6df6d76df" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://reqres.in</con:endpoint><con:request/><con:originalUri>https://reqres.in/api/users</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="page" value="2" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>page</con:entry></con:parameterOrder></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" id="fac9a154-e4a4-4592-a8d1-f5912768c0c6" wadlVersion="http://wadl.dev.java.net/2009/02" name="https://reqres.in" type="rest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>https://reqres.in</con:endpoint></con:endpoints><con:resource name="2" path="/api/users/2" id="01021a94-e800-4c66-9b94-3f1b0175a5d6"><con:settings/><con:parameters/><con:method name="2 1" id="af49db85-e9d5-4901-a4f1-710d1cfe4d81" method="PUT"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:ns="https://reqres.in/api/users/2">ns:Response</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>text/html; charset=utf-8</con:mediaType><con:status>400</con:status><con:params/><con:element>html</con:element></con:representation><con:request name="Request 1" id="34f5c214-e6c6-44c6-bc8a-8475b0fc2dd3" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://reqres.in</con:endpoint><con:request>{
    "name": "morpheus",
    "job": "zion resident"
}</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:WsdlInterface" id="768c44b2-c333-442d-af84-76f20c065ad9" wsaVersion="NONE" name="CountryInfoServiceSoapBinding" type="wsdl" bindingName="{http://www.oorsprong.org/websamples.countryinfo}CountryInfoServiceSoapBinding" soapVersion="1_1" anonymous="optional" definition="http://webservices.oorsprong.org/websamples.countryinfo/CountryInfoService.wso?WSDL" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="http://webservices.oorsprong.org/websamples.countryinfo/CountryInfoService.wso?WSDL"><con:part><con:url>http://webservices.oorsprong.org/websamples.countryinfo/CountryInfoService.wso?WSDL</con:url><con:content><![CDATA[<definitions name="CountryInfoService" targetNamespace="http://www.oorsprong.org/websamples.countryinfo" xmlns="http://schemas.xmlsoap.org/wsdl/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:tns="http://www.oorsprong.org/websamples.countryinfo">
  <types>
    <xs:schema elementFormDefault="qualified" targetNamespace="http://www.oorsprong.org/websamples.countryinfo">
      <xs:complexType name="tContinent">
        <xs:sequence>
          <xs:element name="sCode" type="xs:string"/>
          <xs:element name="sName" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="tCurrency">
        <xs:sequence>
          <xs:element name="sISOCode" type="xs:string"/>
          <xs:element name="sName" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="tCountryCodeAndName">
        <xs:sequence>
          <xs:element name="sISOCode" type="xs:string"/>
          <xs:element name="sName" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="tCountryCodeAndNameGroupedByContinent">
        <xs:sequence>
          <xs:element name="Continent" type="tns:tContinent"/>
          <xs:element name="CountryCodeAndNames" type="tns:ArrayOftCountryCodeAndName"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="tCountryInfo">
        <xs:sequence>
          <xs:element name="sISOCode" type="xs:string"/>
          <xs:element name="sName" type="xs:string"/>
          <xs:element name="sCapitalCity" type="xs:string"/>
          <xs:element name="sPhoneCode" type="xs:string"/>
          <xs:element name="sContinentCode" type="xs:string"/>
          <xs:element name="sCurrencyISOCode" type="xs:string"/>
          <xs:element name="sCountryFlag" type="xs:string"/>
          <xs:element name="Languages" type="tns:ArrayOftLanguage"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="tLanguage">
        <xs:sequence>
          <xs:element name="sISOCode" type="xs:string"/>
          <xs:element name="sName" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ArrayOftCountryCodeAndName">
        <xs:sequence>
          <xs:element name="tCountryCodeAndName" type="tns:tCountryCodeAndName" minOccurs="0" maxOccurs="unbounded" nillable="true"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ArrayOftLanguage">
        <xs:sequence>
          <xs:element name="tLanguage" type="tns:tLanguage" minOccurs="0" maxOccurs="unbounded" nillable="true"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ArrayOftContinent">
        <xs:sequence>
          <xs:element name="tContinent" type="tns:tContinent" minOccurs="0" maxOccurs="unbounded" nillable="true"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ArrayOftCurrency">
        <xs:sequence>
          <xs:element name="tCurrency" type="tns:tCurrency" minOccurs="0" maxOccurs="unbounded" nillable="true"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ArrayOftCountryCodeAndNameGroupedByContinent">
        <xs:sequence>
          <xs:element name="tCountryCodeAndNameGroupedByContinent" type="tns:tCountryCodeAndNameGroupedByContinent" minOccurs="0" maxOccurs="unbounded" nillable="true"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ArrayOftCountryInfo">
        <xs:sequence>
          <xs:element name="tCountryInfo" type="tns:tCountryInfo" minOccurs="0" maxOccurs="unbounded" nillable="true"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="ListOfContinentsByName">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="ListOfContinentsByNameResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="ListOfContinentsByNameResult" type="tns:ArrayOftContinent"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="ListOfContinentsByCode">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="ListOfContinentsByCodeResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="ListOfContinentsByCodeResult" type="tns:ArrayOftContinent"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="ListOfCurrenciesByName">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="ListOfCurrenciesByNameResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="ListOfCurrenciesByNameResult" type="tns:ArrayOftCurrency"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="ListOfCurrenciesByCode">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="ListOfCurrenciesByCodeResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="ListOfCurrenciesByCodeResult" type="tns:ArrayOftCurrency"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="CurrencyName">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="sCurrencyISOCode" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="CurrencyNameResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="CurrencyNameResult" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="ListOfCountryNamesByCode">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="ListOfCountryNamesByCodeResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="ListOfCountryNamesByCodeResult" type="tns:ArrayOftCountryCodeAndName"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="ListOfCountryNamesByName">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="ListOfCountryNamesByNameResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="ListOfCountryNamesByNameResult" type="tns:ArrayOftCountryCodeAndName"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="ListOfCountryNamesGroupedByContinent">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="ListOfCountryNamesGroupedByContinentResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="ListOfCountryNamesGroupedByContinentResult" type="tns:ArrayOftCountryCodeAndNameGroupedByContinent"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="CountryName">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="sCountryISOCode" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="CountryNameResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="CountryNameResult" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="CountryISOCode">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="sCountryName" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="CountryISOCodeResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="CountryISOCodeResult" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="CapitalCity">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="sCountryISOCode" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="CapitalCityResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="CapitalCityResult" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="CountryCurrency">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="sCountryISOCode" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="CountryCurrencyResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="CountryCurrencyResult" type="tns:tCurrency"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="CountryFlag">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="sCountryISOCode" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="CountryFlagResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="CountryFlagResult" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="CountryIntPhoneCode">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="sCountryISOCode" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="CountryIntPhoneCodeResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="CountryIntPhoneCodeResult" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="FullCountryInfo">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="sCountryISOCode" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="FullCountryInfoResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="FullCountryInfoResult" type="tns:tCountryInfo"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="FullCountryInfoAllCountries">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="FullCountryInfoAllCountriesResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="FullCountryInfoAllCountriesResult" type="tns:ArrayOftCountryInfo"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="CountriesUsingCurrency">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="sISOCurrencyCode" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="CountriesUsingCurrencyResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="CountriesUsingCurrencyResult" type="tns:ArrayOftCountryCodeAndName"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="ListOfLanguagesByName">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="ListOfLanguagesByNameResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="ListOfLanguagesByNameResult" type="tns:ArrayOftLanguage"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="ListOfLanguagesByCode">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="ListOfLanguagesByCodeResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="ListOfLanguagesByCodeResult" type="tns:ArrayOftLanguage"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="LanguageName">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="sISOCode" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="LanguageNameResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="LanguageNameResult" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="LanguageISOCode">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="sLanguageName" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="LanguageISOCodeResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="LanguageISOCodeResult" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:schema>
  </types>
  <message name="ListOfContinentsByNameSoapRequest">
    <part name="parameters" element="tns:ListOfContinentsByName"/>
  </message>
  <message name="ListOfContinentsByNameSoapResponse">
    <part name="parameters" element="tns:ListOfContinentsByNameResponse"/>
  </message>
  <message name="ListOfContinentsByCodeSoapRequest">
    <part name="parameters" element="tns:ListOfContinentsByCode"/>
  </message>
  <message name="ListOfContinentsByCodeSoapResponse">
    <part name="parameters" element="tns:ListOfContinentsByCodeResponse"/>
  </message>
  <message name="ListOfCurrenciesByNameSoapRequest">
    <part name="parameters" element="tns:ListOfCurrenciesByName"/>
  </message>
  <message name="ListOfCurrenciesByNameSoapResponse">
    <part name="parameters" element="tns:ListOfCurrenciesByNameResponse"/>
  </message>
  <message name="ListOfCurrenciesByCodeSoapRequest">
    <part name="parameters" element="tns:ListOfCurrenciesByCode"/>
  </message>
  <message name="ListOfCurrenciesByCodeSoapResponse">
    <part name="parameters" element="tns:ListOfCurrenciesByCodeResponse"/>
  </message>
  <message name="CurrencyNameSoapRequest">
    <part name="parameters" element="tns:CurrencyName"/>
  </message>
  <message name="CurrencyNameSoapResponse">
    <part name="parameters" element="tns:CurrencyNameResponse"/>
  </message>
  <message name="ListOfCountryNamesByCodeSoapRequest">
    <part name="parameters" element="tns:ListOfCountryNamesByCode"/>
  </message>
  <message name="ListOfCountryNamesByCodeSoapResponse">
    <part name="parameters" element="tns:ListOfCountryNamesByCodeResponse"/>
  </message>
  <message name="ListOfCountryNamesByNameSoapRequest">
    <part name="parameters" element="tns:ListOfCountryNamesByName"/>
  </message>
  <message name="ListOfCountryNamesByNameSoapResponse">
    <part name="parameters" element="tns:ListOfCountryNamesByNameResponse"/>
  </message>
  <message name="ListOfCountryNamesGroupedByContinentSoapRequest">
    <part name="parameters" element="tns:ListOfCountryNamesGroupedByContinent"/>
  </message>
  <message name="ListOfCountryNamesGroupedByContinentSoapResponse">
    <part name="parameters" element="tns:ListOfCountryNamesGroupedByContinentResponse"/>
  </message>
  <message name="CountryNameSoapRequest">
    <part name="parameters" element="tns:CountryName"/>
  </message>
  <message name="CountryNameSoapResponse">
    <part name="parameters" element="tns:CountryNameResponse"/>
  </message>
  <message name="CountryISOCodeSoapRequest">
    <part name="parameters" element="tns:CountryISOCode"/>
  </message>
  <message name="CountryISOCodeSoapResponse">
    <part name="parameters" element="tns:CountryISOCodeResponse"/>
  </message>
  <message name="CapitalCitySoapRequest">
    <part name="parameters" element="tns:CapitalCity"/>
  </message>
  <message name="CapitalCitySoapResponse">
    <part name="parameters" element="tns:CapitalCityResponse"/>
  </message>
  <message name="CountryCurrencySoapRequest">
    <part name="parameters" element="tns:CountryCurrency"/>
  </message>
  <message name="CountryCurrencySoapResponse">
    <part name="parameters" element="tns:CountryCurrencyResponse"/>
  </message>
  <message name="CountryFlagSoapRequest">
    <part name="parameters" element="tns:CountryFlag"/>
  </message>
  <message name="CountryFlagSoapResponse">
    <part name="parameters" element="tns:CountryFlagResponse"/>
  </message>
  <message name="CountryIntPhoneCodeSoapRequest">
    <part name="parameters" element="tns:CountryIntPhoneCode"/>
  </message>
  <message name="CountryIntPhoneCodeSoapResponse">
    <part name="parameters" element="tns:CountryIntPhoneCodeResponse"/>
  </message>
  <message name="FullCountryInfoSoapRequest">
    <part name="parameters" element="tns:FullCountryInfo"/>
  </message>
  <message name="FullCountryInfoSoapResponse">
    <part name="parameters" element="tns:FullCountryInfoResponse"/>
  </message>
  <message name="FullCountryInfoAllCountriesSoapRequest">
    <part name="parameters" element="tns:FullCountryInfoAllCountries"/>
  </message>
  <message name="FullCountryInfoAllCountriesSoapResponse">
    <part name="parameters" element="tns:FullCountryInfoAllCountriesResponse"/>
  </message>
  <message name="CountriesUsingCurrencySoapRequest">
    <part name="parameters" element="tns:CountriesUsingCurrency"/>
  </message>
  <message name="CountriesUsingCurrencySoapResponse">
    <part name="parameters" element="tns:CountriesUsingCurrencyResponse"/>
  </message>
  <message name="ListOfLanguagesByNameSoapRequest">
    <part name="parameters" element="tns:ListOfLanguagesByName"/>
  </message>
  <message name="ListOfLanguagesByNameSoapResponse">
    <part name="parameters" element="tns:ListOfLanguagesByNameResponse"/>
  </message>
  <message name="ListOfLanguagesByCodeSoapRequest">
    <part name="parameters" element="tns:ListOfLanguagesByCode"/>
  </message>
  <message name="ListOfLanguagesByCodeSoapResponse">
    <part name="parameters" element="tns:ListOfLanguagesByCodeResponse"/>
  </message>
  <message name="LanguageNameSoapRequest">
    <part name="parameters" element="tns:LanguageName"/>
  </message>
  <message name="LanguageNameSoapResponse">
    <part name="parameters" element="tns:LanguageNameResponse"/>
  </message>
  <message name="LanguageISOCodeSoapRequest">
    <part name="parameters" element="tns:LanguageISOCode"/>
  </message>
  <message name="LanguageISOCodeSoapResponse">
    <part name="parameters" element="tns:LanguageISOCodeResponse"/>
  </message>
  <portType name="CountryInfoServiceSoapType">
    <operation name="ListOfContinentsByName">
      <documentation>Returns a list of continents ordered by name.</documentation>
      <input message="tns:ListOfContinentsByNameSoapRequest"/>
      <output message="tns:ListOfContinentsByNameSoapResponse"/>
    </operation>
    <operation name="ListOfContinentsByCode">
      <documentation>Returns a list of continents ordered by code.</documentation>
      <input message="tns:ListOfContinentsByCodeSoapRequest"/>
      <output message="tns:ListOfContinentsByCodeSoapResponse"/>
    </operation>
    <operation name="ListOfCurrenciesByName">
      <documentation>Returns a list of currencies ordered by name.</documentation>
      <input message="tns:ListOfCurrenciesByNameSoapRequest"/>
      <output message="tns:ListOfCurrenciesByNameSoapResponse"/>
    </operation>
    <operation name="ListOfCurrenciesByCode">
      <documentation>Returns a list of currencies ordered by code.</documentation>
      <input message="tns:ListOfCurrenciesByCodeSoapRequest"/>
      <output message="tns:ListOfCurrenciesByCodeSoapResponse"/>
    </operation>
    <operation name="CurrencyName">
      <documentation>Returns the name of the currency (if found)</documentation>
      <input message="tns:CurrencyNameSoapRequest"/>
      <output message="tns:CurrencyNameSoapResponse"/>
    </operation>
    <operation name="ListOfCountryNamesByCode">
      <documentation>Returns a list of all stored counties ordered by ISO code</documentation>
      <input message="tns:ListOfCountryNamesByCodeSoapRequest"/>
      <output message="tns:ListOfCountryNamesByCodeSoapResponse"/>
    </operation>
    <operation name="ListOfCountryNamesByName">
      <documentation>Returns a list of all stored counties ordered by country name</documentation>
      <input message="tns:ListOfCountryNamesByNameSoapRequest"/>
      <output message="tns:ListOfCountryNamesByNameSoapResponse"/>
    </operation>
    <operation name="ListOfCountryNamesGroupedByContinent">
      <documentation>Returns a list of all stored counties grouped per continent</documentation>
      <input message="tns:ListOfCountryNamesGroupedByContinentSoapRequest"/>
      <output message="tns:ListOfCountryNamesGroupedByContinentSoapResponse"/>
    </operation>
    <operation name="CountryName">
      <documentation>Searches the database for a country by the passed ISO country code</documentation>
      <input message="tns:CountryNameSoapRequest"/>
      <output message="tns:CountryNameSoapResponse"/>
    </operation>
    <operation name="CountryISOCode">
      <documentation>This function tries to found a country based on the passed country name.</documentation>
      <input message="tns:CountryISOCodeSoapRequest"/>
      <output message="tns:CountryISOCodeSoapResponse"/>
    </operation>
    <operation name="CapitalCity">
      <documentation>Returns the  name of the captial city for the passed country code</documentation>
      <input message="tns:CapitalCitySoapRequest"/>
      <output message="tns:CapitalCitySoapResponse"/>
    </operation>
    <operation name="CountryCurrency">
      <documentation>Returns the currency ISO code and name for the passed country ISO code</documentation>
      <input message="tns:CountryCurrencySoapRequest"/>
      <output message="tns:CountryCurrencySoapResponse"/>
    </operation>
    <operation name="CountryFlag">
      <documentation>Returns a link to a picture of the country flag</documentation>
      <input message="tns:CountryFlagSoapRequest"/>
      <output message="tns:CountryFlagSoapResponse"/>
    </operation>
    <operation name="CountryIntPhoneCode">
      <documentation>Returns the internation phone code for the passed ISO country code</documentation>
      <input message="tns:CountryIntPhoneCodeSoapRequest"/>
      <output message="tns:CountryIntPhoneCodeSoapResponse"/>
    </operation>
    <operation name="FullCountryInfo">
      <documentation>Returns a struct with all the stored country information. Pass the ISO country code</documentation>
      <input message="tns:FullCountryInfoSoapRequest"/>
      <output message="tns:FullCountryInfoSoapResponse"/>
    </operation>
    <operation name="FullCountryInfoAllCountries">
      <documentation>Returns an array with all countries and all the language information stored</documentation>
      <input message="tns:FullCountryInfoAllCountriesSoapRequest"/>
      <output message="tns:FullCountryInfoAllCountriesSoapResponse"/>
    </operation>
    <operation name="CountriesUsingCurrency">
      <documentation>Returns a list of all countries that use the same currency code. Pass a ISO currency code</documentation>
      <input message="tns:CountriesUsingCurrencySoapRequest"/>
      <output message="tns:CountriesUsingCurrencySoapResponse"/>
    </operation>
    <operation name="ListOfLanguagesByName">
      <documentation>Returns an array of languages ordered by name</documentation>
      <input message="tns:ListOfLanguagesByNameSoapRequest"/>
      <output message="tns:ListOfLanguagesByNameSoapResponse"/>
    </operation>
    <operation name="ListOfLanguagesByCode">
      <documentation>Returns an array of languages ordered by code</documentation>
      <input message="tns:ListOfLanguagesByCodeSoapRequest"/>
      <output message="tns:ListOfLanguagesByCodeSoapResponse"/>
    </operation>
    <operation name="LanguageName">
      <documentation>Find a language name based on the passed ISO language code</documentation>
      <input message="tns:LanguageNameSoapRequest"/>
      <output message="tns:LanguageNameSoapResponse"/>
    </operation>
    <operation name="LanguageISOCode">
      <documentation>Find a language ISO code based on the passed language name</documentation>
      <input message="tns:LanguageISOCodeSoapRequest"/>
      <output message="tns:LanguageISOCodeSoapResponse"/>
    </operation>
  </portType>
  <binding name="CountryInfoServiceSoapBinding" type="tns:CountryInfoServiceSoapType">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <operation name="ListOfContinentsByName">
      <soap:operation soapAction="" style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="ListOfContinentsByCode">
      <soap:operation soapAction="" style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="ListOfCurrenciesByName">
      <soap:operation soapAction="" style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="ListOfCurrenciesByCode">
      <soap:operation soapAction="" style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="CurrencyName">
      <soap:operation soapAction="" style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="ListOfCountryNamesByCode">
      <soap:operation soapAction="" style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="ListOfCountryNamesByName">
      <soap:operation soapAction="" style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="ListOfCountryNamesGroupedByContinent">
      <soap:operation soapAction="" style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="CountryName">
      <soap:operation soapAction="" style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="CountryISOCode">
      <soap:operation soapAction="" style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="CapitalCity">
      <soap:operation soapAction="" style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="CountryCurrency">
      <soap:operation soapAction="" style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="CountryFlag">
      <soap:operation soapAction="" style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="CountryIntPhoneCode">
      <soap:operation soapAction="" style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="FullCountryInfo">
      <soap:operation soapAction="" style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="FullCountryInfoAllCountries">
      <soap:operation soapAction="" style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="CountriesUsingCurrency">
      <soap:operation soapAction="" style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="ListOfLanguagesByName">
      <soap:operation soapAction="" style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="ListOfLanguagesByCode">
      <soap:operation soapAction="" style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="LanguageName">
      <soap:operation soapAction="" style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="LanguageISOCode">
      <soap:operation soapAction="" style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
  </binding>
  <binding name="CountryInfoServiceSoapBinding12" type="tns:CountryInfoServiceSoapType">
    <soap12:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <operation name="ListOfContinentsByName">
      <soap12:operation soapAction="" style="document"/>
      <input>
        <soap12:body use="literal"/>
      </input>
      <output>
        <soap12:body use="literal"/>
      </output>
    </operation>
    <operation name="ListOfContinentsByCode">
      <soap12:operation soapAction="" style="document"/>
      <input>
        <soap12:body use="literal"/>
      </input>
      <output>
        <soap12:body use="literal"/>
      </output>
    </operation>
    <operation name="ListOfCurrenciesByName">
      <soap12:operation soapAction="" style="document"/>
      <input>
        <soap12:body use="literal"/>
      </input>
      <output>
        <soap12:body use="literal"/>
      </output>
    </operation>
    <operation name="ListOfCurrenciesByCode">
      <soap12:operation soapAction="" style="document"/>
      <input>
        <soap12:body use="literal"/>
      </input>
      <output>
        <soap12:body use="literal"/>
      </output>
    </operation>
    <operation name="CurrencyName">
      <soap12:operation soapAction="" style="document"/>
      <input>
        <soap12:body use="literal"/>
      </input>
      <output>
        <soap12:body use="literal"/>
      </output>
    </operation>
    <operation name="ListOfCountryNamesByCode">
      <soap12:operation soapAction="" style="document"/>
      <input>
        <soap12:body use="literal"/>
      </input>
      <output>
        <soap12:body use="literal"/>
      </output>
    </operation>
    <operation name="ListOfCountryNamesByName">
      <soap12:operation soapAction="" style="document"/>
      <input>
        <soap12:body use="literal"/>
      </input>
      <output>
        <soap12:body use="literal"/>
      </output>
    </operation>
    <operation name="ListOfCountryNamesGroupedByContinent">
      <soap12:operation soapAction="" style="document"/>
      <input>
        <soap12:body use="literal"/>
      </input>
      <output>
        <soap12:body use="literal"/>
      </output>
    </operation>
    <operation name="CountryName">
      <soap12:operation soapAction="" style="document"/>
      <input>
        <soap12:body use="literal"/>
      </input>
      <output>
        <soap12:body use="literal"/>
      </output>
    </operation>
    <operation name="CountryISOCode">
      <soap12:operation soapAction="" style="document"/>
      <input>
        <soap12:body use="literal"/>
      </input>
      <output>
        <soap12:body use="literal"/>
      </output>
    </operation>
    <operation name="CapitalCity">
      <soap12:operation soapAction="" style="document"/>
      <input>
        <soap12:body use="literal"/>
      </input>
      <output>
        <soap12:body use="literal"/>
      </output>
    </operation>
    <operation name="CountryCurrency">
      <soap12:operation soapAction="" style="document"/>
      <input>
        <soap12:body use="literal"/>
      </input>
      <output>
        <soap12:body use="literal"/>
      </output>
    </operation>
    <operation name="CountryFlag">
      <soap12:operation soapAction="" style="document"/>
      <input>
        <soap12:body use="literal"/>
      </input>
      <output>
        <soap12:body use="literal"/>
      </output>
    </operation>
    <operation name="CountryIntPhoneCode">
      <soap12:operation soapAction="" style="document"/>
      <input>
        <soap12:body use="literal"/>
      </input>
      <output>
        <soap12:body use="literal"/>
      </output>
    </operation>
    <operation name="FullCountryInfo">
      <soap12:operation soapAction="" style="document"/>
      <input>
        <soap12:body use="literal"/>
      </input>
      <output>
        <soap12:body use="literal"/>
      </output>
    </operation>
    <operation name="FullCountryInfoAllCountries">
      <soap12:operation soapAction="" style="document"/>
      <input>
        <soap12:body use="literal"/>
      </input>
      <output>
        <soap12:body use="literal"/>
      </output>
    </operation>
    <operation name="CountriesUsingCurrency">
      <soap12:operation soapAction="" style="document"/>
      <input>
        <soap12:body use="literal"/>
      </input>
      <output>
        <soap12:body use="literal"/>
      </output>
    </operation>
    <operation name="ListOfLanguagesByName">
      <soap12:operation soapAction="" style="document"/>
      <input>
        <soap12:body use="literal"/>
      </input>
      <output>
        <soap12:body use="literal"/>
      </output>
    </operation>
    <operation name="ListOfLanguagesByCode">
      <soap12:operation soapAction="" style="document"/>
      <input>
        <soap12:body use="literal"/>
      </input>
      <output>
        <soap12:body use="literal"/>
      </output>
    </operation>
    <operation name="LanguageName">
      <soap12:operation soapAction="" style="document"/>
      <input>
        <soap12:body use="literal"/>
      </input>
      <output>
        <soap12:body use="literal"/>
      </output>
    </operation>
    <operation name="LanguageISOCode">
      <soap12:operation soapAction="" style="document"/>
      <input>
        <soap12:body use="literal"/>
      </input>
      <output>
        <soap12:body use="literal"/>
      </output>
    </operation>
  </binding>
  <service name="CountryInfoService">
    <documentation>This DataFlex Web Service opens up country information. 2 letter ISO codes are used for Country code. There are functions to retrieve the used Currency, Language, Capital City, Continent and Telephone code.</documentation>
    <port name="CountryInfoServiceSoap" binding="tns:CountryInfoServiceSoapBinding">
      <soap:address location="http://webservices.oorsprong.org/websamples.countryinfo/CountryInfoService.wso"/>
    </port>
    <port name="CountryInfoServiceSoap12" binding="tns:CountryInfoServiceSoapBinding12">
      <soap12:address location="http://webservices.oorsprong.org/websamples.countryinfo/CountryInfoService.wso"/>
    </port>
  </service>
</definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>http://webservices.oorsprong.org/websamples.countryinfo/CountryInfoService.wso</con:endpoint></con:endpoints><con:operation id="467c2766-02a8-40a5-8a8e-5cbb3cade205" isOneWay="false" action="" name="CapitalCity" bindingOperationName="CapitalCity" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="b3a8cf45-4d3a-4a46-9003-878f6000413c" isOneWay="false" action="" name="CountriesUsingCurrency" bindingOperationName="CountriesUsingCurrency" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="f1185cd1-4ffa-4307-9301-2b928d1a1e88" isOneWay="false" action="" name="CountryCurrency" bindingOperationName="CountryCurrency" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="033ea817-1244-43f2-b801-38bcaa8ff0dc" isOneWay="false" action="" name="CountryFlag" bindingOperationName="CountryFlag" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="687dd33a-dd6f-4582-b361-e6fb2c747d68" isOneWay="false" action="" name="CountryIntPhoneCode" bindingOperationName="CountryIntPhoneCode" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="8f459961-a5d6-479e-b977-1534092b5205" isOneWay="false" action="" name="CountryISOCode" bindingOperationName="CountryISOCode" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="e411a8a5-34aa-4f4c-8679-f45cec8cca23" isOneWay="false" action="" name="CountryName" bindingOperationName="CountryName" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="0d96ace0-da7b-4c91-ac47-8d74f7406246" isOneWay="false" action="" name="CurrencyName" bindingOperationName="CurrencyName" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="667a3d3b-0c21-44ed-a764-a986d2584302" isOneWay="false" action="" name="FullCountryInfo" bindingOperationName="FullCountryInfo" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="8295fe10-419e-4e2e-a7f4-580e39142767" isOneWay="false" action="" name="FullCountryInfoAllCountries" bindingOperationName="FullCountryInfoAllCountries" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="f456d550-5e89-47ca-8f51-108677af80ab" isOneWay="false" action="" name="LanguageISOCode" bindingOperationName="LanguageISOCode" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="7d35ba28-fc5b-4a08-b785-c9ecb937f3b6" isOneWay="false" action="" name="LanguageName" bindingOperationName="LanguageName" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="6adc81e6-250d-454c-8031-275e4d704faf" isOneWay="false" action="" name="ListOfContinentsByCode" bindingOperationName="ListOfContinentsByCode" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="c7214aac-b1d3-459f-b5ef-7af8da347b2f" isOneWay="false" action="" name="ListOfContinentsByName" bindingOperationName="ListOfContinentsByName" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="acbf9fc7-2fe9-434a-83a2-7d07ed6f38b9" isOneWay="false" action="" name="ListOfCountryNamesByCode" bindingOperationName="ListOfCountryNamesByCode" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="afdfec54-d898-4deb-a894-c9a3535e2066" isOneWay="false" action="" name="ListOfCountryNamesByName" bindingOperationName="ListOfCountryNamesByName" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="2407b14a-6713-4524-8b2d-a703bcd88fb5" isOneWay="false" action="" name="ListOfCountryNamesGroupedByContinent" bindingOperationName="ListOfCountryNamesGroupedByContinent" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="417d798f-83ae-405e-a494-c4ca2d17b3a7" isOneWay="false" action="" name="ListOfCurrenciesByCode" bindingOperationName="ListOfCurrenciesByCode" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="d49ce40c-156b-4b88-8f4f-04233c6f0667" isOneWay="false" action="" name="ListOfCurrenciesByName" bindingOperationName="ListOfCurrenciesByName" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="b1d68914-f01e-40b1-805b-7451a1b5dff9" isOneWay="false" action="" name="ListOfLanguagesByCode" bindingOperationName="ListOfLanguagesByCode" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation id="c0133a70-2595-4495-bf38-bdbdb11bda90" isOneWay="false" action="" name="ListOfLanguagesByName" bindingOperationName="ListOfLanguagesByName" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:RestService" id="92bda87d-fc7e-4315-a1f2-1570b26b5b5a" wadlVersion="http://wadl.dev.java.net/2009/02" name="https://restcountries.eu" type="rest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>https://restcountries.eu</con:endpoint></con:endpoints><con:resource name="Currency" path="/rest/v2/currency/{currency}" id="2a8fab47-9095-4cae-812e-37a4bc457902"><con:settings/><con:parameters><con:parameter><con:name>currency</con:name><con:value>currency</con:value><con:style>TEMPLATE</con:style><con:default>currency</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="Currency 1" id="bb427fdd-a5c3-4865-876d-a21721a8feaf" method="GET"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/json;charset=utf-8</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:ars="https://restcountries.eu/rest/v2/currency/%22ARS%22">ars:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json;charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element>Response</con:element></con:representation><con:request name="Request 1" id="54e82bac-5d93-4cd5-aab1-0555dd679897" mediaType="application/json"><con:settings/><con:endpoint>https://restcountries.eu</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="currency" value="currency" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>currency</con:entry></con:parameterOrder></con:request><con:request name="GetCountryByCurrency" id="54e82bac-5d93-4cd5-aab1-0555dd679897" mediaType="application/json"><con:settings/><con:endpoint>https://restcountries.eu</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="currency" value="currency" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>currency</con:entry></con:parameterOrder></con:request></con:method></con:resource></con:interface><con:testSuite id="297c5b49-a8ef-4dab-bfb1-59f45c8b68b5" name="TestSuite 1"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="5f474c65-15bb-44b8-a266-63a772c3c5f7" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="SoapPropertyTransfer" searchProperties="true"><con:settings/><con:testStep type="request" id="fbf70736-e3fc-49d5-8406-c502a5661843" name="AddInteger"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>SOAPDemoSoap</con:interface><con:operation>AddInteger</con:operation><con:request name="AddInteger" id="df6a43a7-3181-49af-932b-048dd53e0c3b"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://www.crcind.com:443/csp/samples/SOAP.Demo.cls</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tem="http://tempuri.org">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <tem:AddInteger>\r
         <!--Optional:-->\r
         <tem:Arg1>300</tem:Arg1>\r
         <!--Optional:-->\r
         <tem:Arg2>300</tem:Arg2>\r
      </tem:AddInteger>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:assertion type="Simple Contains" id="827bbcc1-a344-4257-806b-dd7e4acfed0c" name="Contains"><con:configuration><token>600</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Invalid HTTP Status Codes" id="e1728af2-962f-4bad-bce6-23a07505d137" name="Invalid HTTP Status Codes"><con:configuration><codes>404,500</codes></con:configuration></con:assertion><con:assertion type="SOAP Fault Assertion" id="b8cf71b4-38c0-458e-bcff-89dcfcf7b8db" name="Not SOAP Fault"/><con:assertion type="Valid HTTP Status Codes" id="99cdc015-6ba2-4c3d-9372-0e5834b3d525" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="1ab47cce-b8ca-4949-9645-07269c085ddd" name="Script Assertion"><con:configuration><scriptText>// check response time
assert messageExchange.timeTaken &lt; 1500

// check for endpoint
def endpoint = "https://www.crcind.com:443/csp/samples/SOAP.Demo.cls"
assert messageExchange.getEndpoint() == endpoint

////check for headers
//
//log.info (messageExchange.responseHeaders["Content-Length"])
assert messageExchange.responseHeaders["Content-Length"] != null
//
////check attachments

//validate response nodes
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def requsetHolder = groovyUtils.getXmlHolder( messageExchange.requestContent )
def responseHolder = groovyUtils.getXmlHolder( messageExchange.responseContent )
def result = responseHolder.getNodeValue("*:Envelope/*:Body/*:AddIntegerResponse/*:AddIntegerResult")
log.info(result)
assert result == "600"

</scriptText></con:configuration></con:assertion><con:assertion type="Response SLA Assertion" id="1bf22ae3-db9e-4213-87c3-5ae9bbd7607d" name="Response SLA"><con:configuration><SLA>2000</SLA></con:configuration></con:assertion><con:assertion type="XPath Match" id="18ed7e09-c746-45de-ad3c-fc0d0cd94001" name="XPath Match"><con:configuration><path>*:Envelope/*:Body/*:AddIntegerResponse/*:AddIntegerResult</path><content>600</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://tempuri.org/SOAP.Demo.AddInteger" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="Property Transfer" id="4d5f6b85-d218-4e10-9558-5c33e3fcb6e1"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>Dividendo</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>AddInteger</con:sourceStep><con:sourcePath>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace ns1='http://tempuri.org';
/*:Envelope/*:Body/*:AddIntegerResponse/*:AddIntegerResult</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>DivideInteger</con:targetStep><con:targetPath>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace ns1='http://tempuri.org';
/*:Envelope/*:Body/*:DivideInteger/*:Arg1</con:targetPath><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="request" id="d5dad4f5-d699-49c7-af04-6ffead0de237" name="DivideInteger"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>SOAPDemoSoap</con:interface><con:operation>DivideInteger</con:operation><con:request name="DivideInteger" id="64abeccf-986f-4a7e-8e50-6dceb661e6ee"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://www.crcind.com:443/csp/samples/SOAP.Demo.cls</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tem="http://tempuri.org">
   <soapenv:Header/>
   <soapenv:Body>
      <tem:DivideInteger>
         <!--Optional:-->
         <tem:Arg1>600</tem:Arg1>
         <!--Optional:-->
         <tem:Arg2>2</tem:Arg2>
      </tem:DivideInteger>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="Simple Contains" id="04e40793-388e-46b4-9b27-a7c5ed2bb50a" name="Contains"><con:configuration><token>300</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="SOAP Fault Assertion" id="5fda8f63-66f3-40c3-b0b0-37b914c2a34a" name="Not SOAP Fault"/><con:assertion type="Response SLA Assertion" id="ca4efb75-791a-4cde-ba0f-6b7c04efcd60" name="Response SLA"><con:configuration><SLA>1000</SLA></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="a5390d3f-7260-45f2-a25c-9485d500a5d7" name="Script Assertion"><con:configuration><scriptText>// check response time
assert messageExchange.timeTaken &lt; 1500

// check for endpoint
def endpoint = "https://www.crcind.com:443/csp/samples/SOAP.Demo.cls"
assert messageExchange.getEndpoint() == endpoint

////check for headers
//
//log.info (messageExchange.responseHeaders["Content-Length"])
assert messageExchange.responseHeaders["Content-Length"] != null
//
////check attachments

//validate response nodes
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def requsetHolder = groovyUtils.getXmlHolder( messageExchange.requestContent )
def responseHolder = groovyUtils.getXmlHolder( messageExchange.responseContent )
def result = responseHolder.getNodeValue("*:Envelope/*:Body/*:DivideIntegerResponse/*:DivideIntegerResult")
log.info(result)
assert result == "300"

</scriptText></con:configuration></con:assertion><con:assertion type="Invalid HTTP Status Codes" id="ab0efac3-28e0-4c54-bc55-af9a1961ef02" name="Invalid HTTP Status Codes"><con:configuration><codes>400,404,500</codes></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="940d1337-5fd0-47bf-b7cf-ae6890481798" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" id="491e7641-5808-4b59-abee-222e87f144fa" name="XPath Match"><con:configuration><path>*:Envelope/*:Body/*:DivideIntegerResponse/*:DivideIntegerResult</path><content>300</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://tempuri.org/SOAP.Demo.DivideInteger" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="56b24d32-46cb-4f12-97ae-403a8ae6b687" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="SoapScriptPropertyTransfer" searchProperties="true"><con:settings/><con:testStep type="request" id="d5700add-58ef-4058-b3b4-24008e048a82" name="AddInteger"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>SOAPDemoSoap</con:interface><con:operation>AddInteger</con:operation><con:request name="AddInteger" id="df6a43a7-3181-49af-932b-048dd53e0c3b"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://www.crcind.com:443/csp/samples/SOAP.Demo.cls</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tem="http://tempuri.org">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <tem:AddInteger>\r
         <!--Optional:-->\r
         <tem:Arg1>300</tem:Arg1>\r
         <!--Optional:-->\r
         <tem:Arg2>300</tem:Arg2>\r
      </tem:AddInteger>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:assertion type="Simple Contains" id="827bbcc1-a344-4257-806b-dd7e4acfed0c" name="Contains"><con:configuration><token>600</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Invalid HTTP Status Codes" id="e1728af2-962f-4bad-bce6-23a07505d137" name="Invalid HTTP Status Codes"><con:configuration><codes>404,500</codes></con:configuration></con:assertion><con:assertion type="SOAP Fault Assertion" id="b8cf71b4-38c0-458e-bcff-89dcfcf7b8db" name="Not SOAP Fault"/><con:assertion type="Valid HTTP Status Codes" id="99cdc015-6ba2-4c3d-9372-0e5834b3d525" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="1ab47cce-b8ca-4949-9645-07269c085ddd" name="Script Assertion"><con:configuration><scriptText>// check response time
assert messageExchange.timeTaken &lt; 1500

// check for endpoint
def endpoint = "https://www.crcind.com:443/csp/samples/SOAP.Demo.cls"
assert messageExchange.getEndpoint() == endpoint

////check for headers
//log.info (messageExchange.responseHeaders["Content-Length"])
assert messageExchange.responseHeaders["Content-Length"] != null


//validate response nodes
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def requsetHolder = groovyUtils.getXmlHolder( messageExchange.requestContent )
def responseHolder = groovyUtils.getXmlHolder( messageExchange.responseContent )
def result = responseHolder.getNodeValue("*:Envelope/*:Body/*:AddIntegerResponse/*:AddIntegerResult")
log.info(result)
assert result == "600"

</scriptText></con:configuration></con:assertion><con:assertion type="Response SLA Assertion" id="1bf22ae3-db9e-4213-87c3-5ae9bbd7607d" name="Response SLA"><con:configuration><SLA>1000</SLA></con:configuration></con:assertion><con:assertion type="XPath Match" id="18ed7e09-c746-45de-ad3c-fc0d0cd94001" name="XPath Match"><con:configuration><path>*:Envelope/*:Body/*:AddIntegerResponse/*:AddIntegerResult</path><content>600</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://tempuri.org/SOAP.Demo.AddInteger" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script" id="b1411d56-a421-4b38-a5a0-7c5492f811f5"><con:settings/><con:config><script>def response = testRunner.testCase.getTestStepByName("AddInteger").getPropertyValue("response")


def object = new XmlSlurper().parseText(response)

def value = object.text()

testRunner.testCase.getTestStepByName('Properties').setPropertyValue('Dividendo',value)</script></con:config></con:testStep><con:testStep type="properties" name="Properties" id="2a7851b4-d763-495e-bd81-2a61891da2f7"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>Dividendo</con:name><con:value>600</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="request" id="b5259e68-fafb-437c-91aa-15576dbe4d25" name="DivideInteger"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>SOAPDemoSoap</con:interface><con:operation>DivideInteger</con:operation><con:request name="DivideInteger" id="64abeccf-986f-4a7e-8e50-6dceb661e6ee"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://www.crcind.com:443/csp/samples/SOAP.Demo.cls</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tem="http://tempuri.org">
   <soapenv:Header/>
   <soapenv:Body>
      <tem:DivideInteger>
         <!--Optional:-->
         <tem:Arg1>${Properties#Dividendo}</tem:Arg1>
         <!--Optional:-->
         <tem:Arg2>2</tem:Arg2>
      </tem:DivideInteger>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="Simple Contains" id="04e40793-388e-46b4-9b27-a7c5ed2bb50a" name="Contains"><con:configuration><token>300</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="SOAP Fault Assertion" id="5fda8f63-66f3-40c3-b0b0-37b914c2a34a" name="Not SOAP Fault"/><con:assertion type="Response SLA Assertion" id="ca4efb75-791a-4cde-ba0f-6b7c04efcd60" name="Response SLA"><con:configuration><SLA>1000</SLA></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="a5390d3f-7260-45f2-a25c-9485d500a5d7" name="Script Assertion"><con:configuration><scriptText>// check response time
assert messageExchange.timeTaken &lt; 1500

// check for endpoint
def endpoint = "https://www.crcind.com:443/csp/samples/SOAP.Demo.cls"
assert messageExchange.getEndpoint() == endpoint

////check for headers
//
//log.info (messageExchange.responseHeaders["Content-Length"])
assert messageExchange.responseHeaders["Content-Length"] != null
//
////check attachments

//validate response nodes
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def requsetHolder = groovyUtils.getXmlHolder( messageExchange.requestContent )
def responseHolder = groovyUtils.getXmlHolder( messageExchange.responseContent )
def result = responseHolder.getNodeValue("*:Envelope/*:Body/*:DivideIntegerResponse/*:DivideIntegerResult")
log.info(result)
assert result == "300"

</scriptText></con:configuration></con:assertion><con:assertion type="Invalid HTTP Status Codes" id="ab0efac3-28e0-4c54-bc55-af9a1961ef02" name="Invalid HTTP Status Codes"><con:configuration><codes>400,404,500</codes></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="940d1337-5fd0-47bf-b7cf-ae6890481798" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" id="491e7641-5808-4b59-abee-222e87f144fa" name="XPath Match"><con:configuration><path>*:Envelope/*:Body/*:DivideIntegerResponse/*:DivideIntegerResult</path><content>300</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://tempuri.org/SOAP.Demo.DivideInteger" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="7e7cfa84-e8a4-4788-bdd4-0e95dc9bc7e6" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="RestPropertyTransfer" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="ListUsers" id="6fe323cf-168d-4d1c-a889-8de55b16fcfd"><con:settings/><con:config service="https://reqres.in" resourcePath="/api/users" methodName="Users 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="ListUsers" id="967a639e-dadf-4ef8-9b27-7f94220f607f" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://reqres.in/</con:endpoint><con:request/><con:originalUri>https://reqres.in/api/users</con:originalUri><con:assertion type="Invalid HTTP Status Codes" id="c68aec58-e837-4689-a099-8c1aee44f858" name="Invalid HTTP Status Codes"><con:configuration><codes>404,500</codes></con:configuration></con:assertion><con:assertion type="Response SLA Assertion" id="c0c41ff5-f477-4dc6-9a06-e5c6ff5d3933" name="Response SLA"><con:configuration><SLA>1000</SLA></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="b1c90155-3d3f-4ca0-8361-d8834dcde907" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="409c5ff2-3e8b-4b92-9f8b-9f7eb7ec4519" name="Contains"><con:configuration><token>michael.lawson@reqres.in</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="6b66b199-3638-42c5-bd8d-21ddc824b3a0" name="Script Assertion"><con:configuration><scriptText>// check response time
assert messageExchange.timeTaken &lt; 1500

// check for endpoint
def endpoint = "https://reqres.in/api/users?page=2"
assert messageExchange.getEndpoint() == endpoint

////check for headers
//
//log.info (messageExchange.responseHeaders["Content-Length"])
assert messageExchange.responseHeaders["Content-Type"] != null


</scriptText></con:configuration></con:assertion><con:assertion type="JsonPath RegEx Match" id="3298a01d-dfd3-4279-9a9f-8dc8b1ce1299" name="JsonPath RegEx Match"><con:configuration><path>.data[0].first_name</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments><regEx>Michael</regEx></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="page" value="2" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>page</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Property Transfer" id="e60c905d-b8ba-4612-afef-80570a7324ad"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>transferUser</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>ListUsers</con:sourceStep><con:sourcePath>.data[1].first_name</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>updateUser</con:targetStep><con:targetPath>$.name</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="updateUser" id="618f8701-92fe-4168-a24a-5f00aeb7ec21"><con:settings/><con:config service="https://reqres.in" resourcePath="/api/users/2" methodName="2 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="updateUser" id="34f5c214-e6c6-44c6-bc8a-8475b0fc2dd3" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://reqres.in</con:endpoint><con:request>{
   "name": "Lindsay",
   "job": "zion resident"
}</con:request><con:originalUri>https://reqres.in/api/users/2</con:originalUri><con:assertion type="Simple Contains" id="d728fdba-5aa0-4164-a9de-536dbedbc580" name="Contains"><con:configuration><token>Lindsay</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Invalid HTTP Status Codes" id="e229e821-d558-4bf5-a399-16d89393c9e9" name="Invalid HTTP Status Codes"><con:configuration><codes>400</codes></con:configuration></con:assertion><con:assertion type="Response SLA Assertion" id="cd18f0be-9740-40d4-bf81-17cba05921db" name="Response SLA"><con:configuration><SLA>1000</SLA></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="f533b91b-cbe8-452f-b753-198d0d32d81b" name="Script Assertion"><con:configuration><scriptText>// check response time
assert messageExchange.timeTaken &lt; 1500

// check for endpoint
def endpoint = "https://reqres.in/api/users/2"
assert messageExchange.getEndpoint() == endpoint

////check for headers
//
//log.info (messageExchange.responseHeaders["Content-Length"])
assert messageExchange.responseHeaders["Content-Type"] != null


</scriptText></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="d3d66c85-9769-4aa6-887e-4ef33dbd879c" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="b76cd47d-a422-4770-a195-9603f1bdfbe9" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="RestScriptPropertyTransfer" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="ListUsers" id="7bd800ad-a5e7-4522-a507-afadd42aa450"><con:settings/><con:config service="https://reqres.in" resourcePath="/api/users" methodName="Users 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="ListUsers" id="967a639e-dadf-4ef8-9b27-7f94220f607f" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://reqres.in/</con:endpoint><con:request/><con:originalUri>https://reqres.in/api/users</con:originalUri><con:assertion type="Invalid HTTP Status Codes" id="c68aec58-e837-4689-a099-8c1aee44f858" name="Invalid HTTP Status Codes"><con:configuration><codes>404,500</codes></con:configuration></con:assertion><con:assertion type="Response SLA Assertion" id="c0c41ff5-f477-4dc6-9a06-e5c6ff5d3933" name="Response SLA"><con:configuration><SLA>1000</SLA></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="b1c90155-3d3f-4ca0-8361-d8834dcde907" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="409c5ff2-3e8b-4b92-9f8b-9f7eb7ec4519" name="Contains"><con:configuration><token>michael.lawson@reqres.in</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="6b66b199-3638-42c5-bd8d-21ddc824b3a0" name="Script Assertion"><con:configuration><scriptText>// check response time
assert messageExchange.timeTaken &lt; 1500

// check for endpoint
def endpoint = "https://reqres.in/api/users?page=2"
assert messageExchange.getEndpoint() == endpoint

////check for headers
//
//log.info (messageExchange.responseHeaders["Content-Length"])
assert messageExchange.responseHeaders["Content-Type"] != null


</scriptText></con:configuration></con:assertion><con:assertion type="JsonPath RegEx Match" id="3298a01d-dfd3-4279-9a9f-8dc8b1ce1299" name="JsonPath RegEx Match"><con:configuration><path>.data[0].first_name</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments><regEx>Michael</regEx></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="page" value="2" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>page</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script" id="7a7bef53-29d0-43c2-b5c4-c588f147f7d7"><con:settings/><con:config><script>def response = testRunner.testCase.getTestStepByName('ListUsers').getPropertyValue('response')

def jsonSlurper = new groovy.json.JsonSlurper()
def object = jsonSlurper.parseText(response)

def value = object.data[3].first_name

testRunner.testCase.getTestStepByName('Properties').setPropertyValue('user',value)</script></con:config></con:testStep><con:testStep type="properties" name="Properties" id="1b3a2b1e-04d8-44a3-9c33-4231e680b502"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>user</con:name><con:value>Byron</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="updateUser" id="7430298a-80fc-4dcf-8448-466b2b7b4d4f"><con:settings/><con:config service="https://reqres.in" resourcePath="/api/users/2" methodName="2 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="updateUser" id="34f5c214-e6c6-44c6-bc8a-8475b0fc2dd3" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://reqres.in</con:endpoint><con:request>{
   "name":"${Properties#user}",
   "job": "zion resident"
}</con:request><con:originalUri>https://reqres.in/api/users/2</con:originalUri><con:assertion type="Simple Contains" id="d728fdba-5aa0-4164-a9de-536dbedbc580" name="Contains"><con:configuration><token>Byron</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Invalid HTTP Status Codes" id="e229e821-d558-4bf5-a399-16d89393c9e9" name="Invalid HTTP Status Codes"><con:configuration><codes>400</codes></con:configuration></con:assertion><con:assertion type="Response SLA Assertion" id="cd18f0be-9740-40d4-bf81-17cba05921db" name="Response SLA"><con:configuration><SLA>1000</SLA></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="f533b91b-cbe8-452f-b753-198d0d32d81b" name="Script Assertion"><con:configuration><scriptText>// check response time
assert messageExchange.timeTaken &lt; 1500

// check for endpoint
def endpoint = "https://reqres.in/api/users/2"
assert messageExchange.getEndpoint() == endpoint

////check for headers
//
//log.info (messageExchange.responseHeaders["Content-Length"])
assert messageExchange.responseHeaders["Content-Type"] != null


</scriptText></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="d3d66c85-9769-4aa6-887e-4ef33dbd879c" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="913d6ec8-cd4d-48ff-84e6-4624f16a1c59" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="PropertyScriptTransferFromSoapToRest" searchProperties="true"><con:settings/><con:testStep type="request" id="6709abf8-66d4-4141-a732-2e38c614be13" name="CountryCurrency"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>CountryInfoServiceSoapBinding</con:interface><con:operation>CountryCurrency</con:operation><con:request name="CountryCurrency" id="1a3fe04e-e59f-4800-b0b2-b80e9603a3c5"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://webservices.oorsprong.org/websamples.countryinfo/CountryInfoService.wso</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:web="http://www.oorsprong.org/websamples.countryinfo">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <web:CountryCurrency>\r
         <web:sCountryISOCode>AR</web:sCountryISOCode>\r
      </web:CountryCurrency>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:assertion type="Valid HTTP Status Codes" id="f70e93da-738d-408b-8977-beade15316f6" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Invalid HTTP Status Codes" id="64dbe54c-2549-4628-89ad-65387edb0a66" name="Invalid HTTP Status Codes"><con:configuration><codes>400</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="fb6cb32a-548f-4616-a386-98c30901fdfd" name="Script Assertion"><con:configuration><scriptText>// check response time
assert messageExchange.timeTaken &lt; 20000

// check for endpoint
def endpoint = "http://webservices.oorsprong.org/websamples.countryinfo/CountryInfoService.wso"
assert messageExchange.getEndpoint() == endpoint

////check for headers
//
//log.info (messageExchange.responseHeaders["Content-Length"])
assert messageExchange.responseHeaders["Content-Length"] != null
//
////check attachments

//validate response nodes
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def requsetHolder = groovyUtils.getXmlHolder( messageExchange.requestContent )
def responseHolder = groovyUtils.getXmlHolder( messageExchange.responseContent )
def currency = responseHolder.getNodeValue("/soap:Envelope/soap:Body/m:CountryCurrencyResponse/m:CountryCurrencyResult/m:sISOCode")
assert currency == "ARS"
def currencyName = responseHolder.getNodeValue("/soap:Envelope/soap:Body/*:CountryCurrencyResponse/*:CountryCurrencyResult/*:sName")
assert currencyName == "Pesos"

</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" id="8fa16851-90c0-4921-8fa4-6129db81d79b" name="XPath Match"><con:configuration><path>/*:Envelope/*:Body/*:CountryCurrencyResponse/*:CountryCurrencyResult/*:sISOCode</path><content>ARS</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Simple Contains" id="327ef49e-e387-42a8-9e55-d225bb05df9f" name="Contains"><con:configuration><token>ARS</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="d282841d-f00f-4252-89b0-abe30a7e217f" name="Contains 1"><con:configuration><token>Pesos</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://www.oorsprong.org/websamples.countryinfo/CountryInfoServiceSoapType/CountryCurrencyRequest" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script" id="0d34f2e7-9a9b-4b26-8a5b-387ac2491c7c"><con:settings/><con:config><script>def response = testRunner.testCase.getTestStepByName("CountryCurrency").getPropertyValue("response")

//

def parsedResponse = new XmlSlurper().parseText(response)


String ISOCode = parsedResponse.Body.CountryCurrencyResponse.CountryCurrencyResult.sISOCode.text()


testRunner.testCase.getTestStepByName('Properties').setPropertyValue('Currency',ISOCode)
</script></con:config></con:testStep><con:testStep type="properties" name="Properties" id="77737f95-20aa-4816-afdf-9e1d6b81463a"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>Currency</con:name><con:value>ARS</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="GetCountryByCurrency" id="de6add88-485a-4893-8eb3-956fa4304869"><con:settings/><con:config service="https://restcountries.eu" resourcePath="/rest/v2/currency/{currency}" methodName="Currency 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GetCountryByCurrency" id="54e82bac-5d93-4cd5-aab1-0555dd679897" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://restcountries.eu</con:endpoint><con:request/><con:originalUri>https://restcountries.eu/rest/v2/currency/%22ARS%22</con:originalUri><con:assertion type="Simple Contains" id="868d5c96-98c1-43d2-bd84-10f6d5091e58" name="Contains"><con:configuration><token>Argentina</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="77682b19-41f1-469c-b164-a1386d406bd9" name="Script Assertion"><con:configuration><scriptText>// check response time
assert messageExchange.timeTaken &lt; 1500

// check for endpoint
def endpoint = "https://restcountries.eu/rest/v2/currency/ARS"
assert messageExchange.getEndpoint() == endpoint



</scriptText></con:configuration></con:assertion><con:assertion type="JsonPath RegEx Match" id="f2e7c1c7-82f8-4e65-88ac-bdc86ebce043" name="JsonPath RegEx Match"><con:configuration><path>[0].name</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments><regEx>Argentina</regEx></con:configuration></con:assertion><con:assertion type="Invalid HTTP Status Codes" id="74735c8d-d57a-411e-a55e-797522bab0f5" name="Invalid HTTP Status Codes"><con:configuration><codes>404,201,500</codes></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="4ac9b8c8-8568-45ae-b21b-e2bb4ce95d55" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="currency" value="${Properties#Currency}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>currency</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="aaceee34-3157-4c4a-a958-9e572b6aceff" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="ImportTxtData" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Groovy Script" id="5a48bf79-7b3d-476d-a862-42dfa2584e87"><con:settings/><con:config><script>import com.eviware.soapui.support.XmlHolder

def myTestCase = context.testCase
def counter,next,previous,sizeFile

tickerEnumFile = new File('C:/Users/fabry/Documents/GitHub/SoapUI-Projects/Practice/addInteger.txt')
List lines = tickerEnumFile.readLines()
size = lines.size.toInteger()

propTestStep =  myTestCase.getTestStepByName("Properties")
propTestStep.setPropertyValue("Total", size.toString())

counter = propTestStep.getPropertyValue("Count").toString()
counter = counter.toInteger()
next = (counter > size-2? 0: counter +1)

tempValue = lines[counter]
String[] str;
str = tempValue.split(',');
propTestStep.setPropertyValue('Value1', str[0])
propTestStep.setPropertyValue('Value2', str[1])

propTestStep.setPropertyValue("Count", next.toString())
next++

log.info "Reading line : ${(counter+1)} / #lines.size"
propTestStep.setPropertyValue("Next", next.toString())
log.info "Value '$tempValue' -- updated in $propTestStep.name"

if (counter == size-1) {
	propTestStep.setPropertyValue("StopLoop","T")
	log.info "Setting the stoploop property now..."
} else if (counter == 0) {
	def runner = new com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner(testRunner.testCase, null)
	propTestStep.setPropertyValue("StopLoop","F")
} else {
	propTestStep.setPropertyValue("StopLoop", "F")
}
</script></con:config></con:testStep><con:testStep type="properties" name="Properties" id="b84689ce-09ce-45f3-9ee2-38858df4dbab"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>Total</con:name><con:value>10</con:value></con:property><con:property><con:name>Value1</con:name><con:value>2</con:value></con:property><con:property><con:name>Value2</con:name><con:value>3</con:value></con:property><con:property><con:name>Count</con:name><con:value>1</con:value></con:property><con:property><con:name>Next</con:name><con:value>2</con:value></con:property><con:property><con:name>StopLoop</con:name><con:value>F</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="request" id="d6ef0a2d-2b63-4c0a-bcb4-5e438ba0322e" name="AddInteger"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>SOAPDemoSoap</con:interface><con:operation>AddInteger</con:operation><con:request name="AddInteger" id="9ca3b5df-7962-44f6-9d49-a755bd75fe1b"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://www.crcind.com:443/csp/samples/SOAP.Demo.cls</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tem="http://tempuri.org">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <tem:AddInteger>\r
         <!--Optional:-->\r
         <tem:Arg1>${Properties#Value1}</tem:Arg1>\r
         <!--Optional:-->\r
         <tem:Arg2>${Properties#Value2}</tem:Arg2>\r
      </tem:AddInteger>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:assertion type="Valid HTTP Status Codes" id="f24918bf-5b3b-45b3-bb21-398d2dbd8995" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="48669b0a-61b8-48c5-bb51-b5bb1785ce7d" name="Contains"><con:configuration><token>AddIntegerResult</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://tempuri.org/SOAP.Demo.AddInteger" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script2" id="d4a3efe9-25c6-45ab-8310-66508b332f2c"><con:settings/><con:config><script>def response = context.expand( '${AddInteger#Response}' )
def parsedResponse = new XmlSlurper().parseText(response)
String convertedValue = parsedResponse.Body.AddIntegerResponse.AddIntegerResult.text()
log.info "The sum is equal to:  ${(convertedValue)}"


def myTestCase = context.testCase
def runner

propTestStep = myTestCase.getTestStepByName("Properties")
endLoop = propTestStep.getPropertyValue("StopLoop").toString()
if (endLoop.toString() == "T" || endLoop.toString() == "True" || endLoop.toString() =='true')
{
log.info("Exit groovy data source looper")	
}
else
{
	testRunner.gotoStepByName("Groovy Script")
}
</script></con:config></con:testStep><con:properties/></con:testCase><con:properties/></con:testSuite><con:properties/><con:wssContainer/><con:oAuth2ProfileContainer/><con:oAuth1ProfileContainer/><con:sensitiveInformation/></con:soapui-project>